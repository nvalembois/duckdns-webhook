# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  release:
    types:
      - created
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - 
      uses: actions/checkout@v3
    - 
      name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        check-latest: true
    - 
      name: Build
      run: go build -v ./...
    - 
      name: Test
      run: go test -v ./...

  deploy:
    if: github.ref_type == 'tag' || !contains(fromJSON('["main", "master"]'), github.ref_name)
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
    - 
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - 
      name: Set up Docker
      uses: docker/setup-buildx-action@v1
    - 
      name: Login to registry ${{ env.REGISTRY }}
      if: github.ref_type == 'tag'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - 
      name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    - 
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: ${{ github.ref_type == 'tag' }}
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }} # ${{ github.repository }}:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
